{"version":3,"sources":["Components/Form.js","Components/Todo.js","Components/Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","Todolist","filteredTodos","App","useState","status","setfilteredTodos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0ede0d0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus}) => {\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, {text: inputText, completed: false, id: Math.random() * 1000},\r\n        ]);\r\n        \r\n        setInputText(\"\");\r\n    };\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    };\r\n    return(\r\n        <form>\r\n        <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n        <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n            <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n            <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                <option value=\"all\">All</option>\r\n                <option value=\"completed\">Completed</option>\r\n                <option value=\"uncompleted\">Uncompleted</option>\r\n            </select>\r\n        </div>\r\n        </form> \r\n\r\n    );\r\n};\r\n\r\nexport default Form;","import React from 'react'\r\n\r\nconst Todo = ({text, todo, todos, setTodos}) => {\r\n\r\n    const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n    };\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(item => {\r\n            if(item.id === todo.id) {\r\n                return{\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n\r\n        }))\r\n    }\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\"> \r\n                <i className=\"fas fa-check\"></i></button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\"> \r\n                <i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react'\r\nimport Todo from './Todo';\r\n\r\nconst Todolist = ({todos, setTodos, filteredTodos}) => {\r\n    \r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map((todo) => (\r\n                    <Todo setTodos={setTodos} todos={todos} key={todo.id} todo={todo} text={todo.text} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todolist;\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Form from \"./Components/Form\";\nimport Todolist from './Components/Todolist';\n\nfunction App() {\n  const [inputText, setInputText] = useState (\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');  \n  const [filteredTodos, setfilteredTodos] = useState([]);\n\n  useEffect(() => {\n    filterHandler();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch(status){\n      case `completed`:\n        setfilteredTodos(todos.filter(todo => todo.completed === true))\n        break;\n        case `uncompleted`:\n        setfilteredTodos(todos.filter(todo => todo.completed === false))\n        break;\n        default:\n          setfilteredTodos(todos);\n          break;\n\n    }\n  }\n  return (\n   <div className=\"App\">\n     <header>\n     <h1>Todo List</h1>\n     </header>\n     <Form inputText={inputText} \n     todos={todos} \n     setTodos={setTodos} \n     setInputText={setInputText} \n     setStatus={setStatus}\n     />\n     <Todolist filteredTodos={filteredTodos} setTodos={setTodos} todos={todos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}